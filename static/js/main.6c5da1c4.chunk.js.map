{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/MovieForm/MovieForm.tsx","movies.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","MovieForm","addMovie","setCurrentMovie","useState","query","setQuery","inputValue","setInputValue","error","setError","getMovies","currentQuery","title","fetch","then","response","json","movieFromServer","Error","onSubmit","event","currentMovie","preventDefault","some","currentFilm","htmlFor","type","value","id","placeholder","classNames","onChange","currentTarget","toLowerCase","onClick","FindMovie","setMovie","App","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c5da1c4.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { request } from '../../movies';\n\ntype Props = {\n  addMovie: (movieFromServer: Movie) => void;\n  setCurrentMovie: (currentMovie: Movie | null) => void;\n  movies: Movie[];\n  movie: Movie | null;\n};\n\nexport const MovieForm: React.FC<Props> = ({\n  addMovie,\n  setCurrentMovie,\n  movies,\n  movie,\n}) => {\n  const [query, setQuery] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState(false);\n\n  const inputChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    if (error) {\n      setError(false);\n    }\n\n    setQuery(event.currentTarget.value.toLowerCase());\n    setInputValue(event.currentTarget.value);\n  };\n\n  const getMovies = (currentQuery: string) => {\n    return request(currentQuery)\n      .then((movieFromServer) => {\n        if (movieFromServer.Error) {\n          setError(true);\n        } else {\n          setCurrentMovie(movieFromServer);\n        }\n      });\n  };\n\n  const addMovieHandler = (currentMovie: Movie | null) => {\n    if (currentMovie) {\n      const isDuplicat = movies\n        .some(currentFilm => currentFilm.imdbID === movie?.imdbID);\n\n      if (!isDuplicat) {\n        addMovie(currentMovie);\n      }\n\n      setInputValue('');\n      setCurrentMovie(null);\n    }\n  };\n\n  return (\n    <form\n      className=\"find-movie\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addMovieHandler(movie);\n      }}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            id=\"movie-title\"\n            placeholder=\"Enter a title to search\"\n            className={classNames(\n              'input',\n              { 'is-danger': error },\n            )}\n            onChange={inputChangeHandler}\n          />\n        </div>\n\n        {error\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n      </div>\n\n      <div className=\"field is-grouped\" data-cy=\"find\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-light\"\n            onClick={() => getMovies(query)}\n          >\n            Find a movie\n          </button>\n        </div>\n\n        <div className=\"control\" data-cy=\"add\">\n          <button\n            type=\"submit\"\n            className=\"button is-primary\"\n          >\n            Add to the list\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey';\nconst MY_KEY = 'bd1244c7';\n\nexport const request = (title: string) => {\n  return fetch(`${API_URL}=${MY_KEY}&t=${title}`)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieForm } from '../MovieForm';\n\ntype Props = {\n  addMovie: (movieFromServer: Movie) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const setCurrentMovie = (currentMovie: Movie | null) => {\n    setMovie(currentMovie);\n  };\n\n  return (\n    <>\n      <MovieForm\n        addMovie={addMovie}\n        setCurrentMovie={setCurrentMovie}\n        movies={movies}\n        movie={movie}\n      />\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const addMovie = (movieFromServer: Movie) => {\n    setMovie((currentMovies) => [...currentMovies, movieFromServer]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && <MoviesList movies={movies} />}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}