{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","movies.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","addMovie","useState","setMovie","query","setQuery","error","setError","getMovies","currentQuery","title","fetch","then","response","json","movieFromServer","Error","htmlFor","type","id","placeholder","classNames","onChange","event","currentTarget","value","toLowerCase","onClick","currentMovie","some","currentFilm","App","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC5BGC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,wBCFRC,EAA6B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUJ,EAAa,EAAbA,OACrD,EAA0BK,mBAAuB,MAAjD,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAY,SAACC,GACjB,OCdoBC,EDcLD,ECbVE,MAAM,GAAD,OAJE,kCAIF,YAHC,WAGD,cAA2BD,IACpCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDaxBF,MAAK,SAACG,GACDA,EAAgBC,MAClBT,GAAS,GAETJ,EAASY,MCnBI,IAACL,GD8CtB,OACE,qCACE,uBAAMpB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,yBAIA,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAW+B,IACT,QACA,CAAE,YAAaf,IAEjBgB,SAvCe,SAACC,GACtBjB,GACFC,GAAS,GAGXF,EAASkB,EAAMC,cAAcC,MAAMC,oBAsC5BpB,GAEG,mBAAGhB,UAAU,iBAAb,qDAMN,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACVqC,QAAS,kBAAMnB,EAAUJ,IAH3B,4BASF,qBAAKd,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBACVqC,QAAS,WA1DG,IAACC,KA0DkBvC,KAxDpBQ,EAChBgC,MAAK,SAAAC,GAAW,OAAIA,EAAY/B,UAAZ,OAAuBV,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOU,YAGnDE,EAAS2B,GAGXvB,EAAS,IACTF,EAAS,QA6CH,qCAWN,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,WEjGvB0C,EAAgB,WAC3B,MAA2B7B,mBAAkB,IAA7C,mBAAOL,EAAP,KAAeM,EAAf,KAMA,OACE,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACGO,GAAU,cAAC,EAAD,CAAYA,OAAQA,MAEjC,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,SAVA,SAACc,GAChBZ,GAAS,SAAC6B,GAAD,4BAAuBA,GAAvB,CAAsCjB,QASZlB,OAAQA,UCf/CoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bb9a29cc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { request } from '../../movies';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movieFromServer: Movie) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n\n  const getMovies = (currentQuery: string) => {\n    return request(currentQuery)\n      .then((movieFromServer) => {\n        if (movieFromServer.Error) {\n          setError(true);\n        } else {\n          setMovie(movieFromServer);\n        }\n      });\n  };\n\n  const inputChangeHandler = (event: React.FormEvent<HTMLInputElement>) => {\n    if (error) {\n      setError(false);\n    }\n\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const addMovieHandler = (currentMovie: Movie | null) => {\n    if (currentMovie) {\n      const isDuplicat = movies\n        .some(currentFilm => currentFilm.imdbID === movie?.imdbID);\n\n      if (!isDuplicat) {\n        addMovie(currentMovie);\n      }\n\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': error },\n              )}\n              onChange={inputChangeHandler}\n            />\n          </div>\n\n          {error\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => getMovies(query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovieHandler(movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey';\nconst MY_KEY = 'bd1244c7';\n\nexport const request = (title: string) => {\n  return fetch(`${API_URL}=${MY_KEY}&t=${title}`)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n// import { request } from './movies';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const addMovie = (movieFromServer: Movie) => {\n    setMovie((currentMovies) => [...currentMovies, movieFromServer]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && <MoviesList movies={movies} />}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}